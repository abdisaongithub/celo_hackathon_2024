{
    "openapi": "3.1.0",
    "info": {
        "title": " Swagger doc generated for Express API",
        "version": "1.0.0",
        "description": "This is a simple CRUD API application made with Express and documented with Swagger",
        "license": {
            "name": "",
            "url": ""
        },
        "contact": {
            "name": "",
            "url": "",
            "email": ""
        },
        "termsOfService": "#"
    },
    "servers": [{
        "url": "https://{username}.gigantic-server.com:{port}/{basePath}",
        "description": "The production API server",
        "variables": {
            "username": {
                "default": "abdi",
                "description": "this value is assigned by the service provider, in this example `gigantic-server.com`"
            },
            "port": {
                "enum": [
                    "8443",
                    "443"
                ],
                "default": "443"
            },
            "basePath": {
                "default": "v1"
            }
        }
    }],
    "components": {
        "schemas": {
            "GeneralError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Category": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Tag": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            }
        },
        "parameters": {
            "skipParam": {
                "name": "skip",
                "in": "query",
                "description": "number of items to skip",
                "required": true,
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "limitParam": {
                "name": "limit",
                "in": "query",
                "description": "max records to return",
                "required": true,
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "responses": {
            "NotFound": {
                "description": "Entity not found."
            },
            "IllegalInput": {
                "description": "Illegal input for operation."
            },
            "GeneralError": {
                "description": "General Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/GeneralError"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "api_key",
                "in": "header"
            },
            "petstore_auth": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://example.org/api/oauth/dialog",
                        "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/pets": {
            "get": {
                "description": "Returns pets based on ID",
                "summary": "Find pets by ID",
                "operationId": "getPetsById",
                "responses": {
                    "200": {
                        "description": "pet response",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Pet"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error payload",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [{
                "name": "id",
                "in": "path",
                "description": "ID of pet to use",
                "required": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "style": "simple"
            }]
        }
    },
    "tags": [
        "pet"
    ],
    "summary": "Updates a pet in the store with form data",
    "operationId": "updatePetWithForm",
    "parameters": [{
        "name": "petId",
        "in": "path",
        "description": "ID of pet that needs to be updated",
        "required": true,
        "schema": {
            "type": "string"
        }
    }],
    "requestBody": {
        "content": {
            "application/x-www-form-urlencoded": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "description": "Updated name of the pet",
                            "type": "string"
                        },
                        "status": {
                            "description": "Updated status of the pet",
                            "type": "string"
                        }
                    },
                    "required": ["status"]
                }
            }
        }
    },
    "responses": {
        "200": {
            "description": "Pet updated.",
            "content": {
                "application/json": {},
                "application/xml": {}
            }
        },
        "405": {
            "description": "Method Not Allowed",
            "content": {
                "application/json": {},
                "application/xml": {}
            }
        }
    },
    "security": [{
        "petstore_auth": [
            "write:pets",
            "read:pets"
        ]
    }]
}